services:
  app:
#    image: ${IMAGE_NAME}:${IMAGE_VERSION}-perf-app
#    image: mcr.microsoft.com/dotnet/sdk:6.0
    container_name: perf-app-srvc
    build:
      context: ./
      dockerfile: ./Dockerfile
#      cache_from:
#        - ${IMAGE_NAME}:${IMAGE_VERSION}-perf-app
#        - perf-app
    deploy:
      resources:
        limits:
          memory: 160M
    restart: unless-stopped
    ports:
      - 5277:5000
    environment:
      - REDIS_ADDR
    depends_on:
      - redis-app

# Redis used by App service
  redis-app:
    image: redis:alpine
    container_name: redis-app
    user: redis
    deploy:
      resources:
        limits:
          memory: 20M
    restart: unless-stopped
    ports:
      - "${REDIS_PORT}"

# Prometheus
  prometheus:
    image: quay.io/prometheus/prometheus:v2.43.0
    container_name: prometheus
    command:
      - --web.console.templates=/etc/prometheus/consoles
      - --web.console.libraries=/etc/prometheus/console_libraries
      - --storage.tsdb.retention.time=1h
      - --config.file=/etc/prometheus/prometheus-config.yaml
      - --storage.tsdb.path=/prometheus
      - --web.enable-lifecycle
      - --web.route-prefix=/
      - --enable-feature=exemplar-storage
    volumes:
      - ./src/prometheus/prometheus-config.yaml:/etc/prometheus/prometheus-config.yaml
    deploy:
      resources:
        limits:
          memory: 300M
    ports:
      - "${PROMETHEUS_SERVICE_PORT}:${PROMETHEUS_SERVICE_PORT}"

# Grafana
  grafana:
    image: grafana/grafana:9.4.7
    container_name: grafana
    deploy:
      resources:
        limits:
          memory: 100M
    volumes:
      - ./src/grafana/grafana.ini:/etc/grafana/grafana.ini
      - ./src/grafana/provisioning/:/etc/grafana/provisioning/
    ports:
      - "${GRAFANA_SERVICE_PORT}"